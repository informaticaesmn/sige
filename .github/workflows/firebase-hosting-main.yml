# .github/workflows/firebase-hosting-main.yml

name: Deploy a Firebase Hosting (Rama Main)

# Define cuándo se ejecutará este workflow
on:
  push:
    branches:
      - main # <--- Solo se ejecuta en pushes a la rama 'main'

jobs:
  build_and_deploy:
    # Añadimos permisos explícitos para la lectura de secretos
    permissions:
      contents: read
      secrets: read
      id-token: write # Necesario para la autenticación con la cuenta de servicio de Google

    runs-on: ubuntu-latest # Usamos un entorno Linux

    steps:
      # 1. Checkout: Clona el código del repositorio
      - name: Checkout Repo
        uses: actions/checkout@v4

      # 2. Configurar Node.js (asegúrate de la versión que usas localmente)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Ajusta esto a tu versión de Node (ej: 18, 20)

      # 3. Cachear dependencias (para acelerar futuras ejecuciones)
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4. Instalar dependencias
      - name: Install Dependencies
        run: npm install

      # 5. Construir la aplicación Vue (genera la carpeta 'dist')
      - name: Build Vue App
        run: npm run build
        env:
          NODE_ENV: production
          # ¡Este es el paso clave!
          # Inyectamos los secretos de GitHub como variables de entorno
          # para que Vite pueda usarlos durante la compilación.
          VITE_API_KEY: ${{ secrets.VITE_API_KEY }}
          VITE_AUTH_DOMAIN: ${{ secrets.VITE_AUTH_DOMAIN }}
          VITE_PROJECT_ID: ${{ secrets.VITE_PROJECT_ID }}
          VITE_STORAGE_BUCKET: ${{ secrets.VITE_STORAGE_BUCKET }}
          VITE_MESSAGING_SENDER_ID: ${{ secrets.VITE_MESSAGING_SENDER_ID }}
          VITE_APP_ID: ${{ secrets.VITE_APP_ID }}

      # 6. Desplegar a Firebase Hosting
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}' # Token generado por GitHub para la acción
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}' # <--- Usamos el nombre correcto del secreto
          channelId: live # Despliega a la URL principal (el canal 'live')
          projectId: prueba1-esmn