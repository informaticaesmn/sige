// firestore.rules
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function esAdmin() {
      return get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.roles.hasAny(['admin']);
    }

    function esBedel() {
      return get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.roles.hasAny(['bedel']);
    }

    // --- Usuarios ---
    match /usuarios/{userId} {
      allow read: if request.auth.uid == userId || esBedel() || esAdmin();
      allow create: if esAdmin();
      allow update: if (request.auth.uid == userId && request.resource.data.roles == resource.data.roles) ||
                     (esBedel() && resource.data.roles.hasAny(['estudiante']) && request.resource.data.roles == resource.data.roles) ||
                     esAdmin();
      allow delete: if esAdmin();
    }

    // --- Oferta Académica (solo lectura para todos los autenticados) ---
    match /ofertaAcademica/{ciclo} {
      allow read: if request.auth != null;
      allow write: if esAdmin(); // solo vos o bedeles con rol admin
    }

    // --- Inscripciones de un usuario (subcolección) ---
    match /usuarios/{userId}/inscripciones2026/{materiaId} {
      // Solo el propio usuario puede crear/actualizar sus inscripciones
      allow create, update: if request.auth.uid == userId;
      // Solo el usuario, bedeles o admin pueden leer
      allow read: if request.auth.uid == userId || esBedel() || esAdmin();
      // Solo bedeles o admin pueden confirmar (cambiar estado a "confirmada")
      allow update: if (esBedel() || esAdmin()) && 
                    request.resource.data.estado == 'confirmada' &&
                    request.resource.data.keys().hasOnly(['estado']);
    }
  }
}